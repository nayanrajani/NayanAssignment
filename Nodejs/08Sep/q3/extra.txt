const express = require("express");
const cors = require("cors");
const dataAccess = require('./dataaccess');
const path = require("path");
const instance = express();
instance.use(express.urlencoded({ extended: false }));
instance.use(express.json());
instance.use(
  cors({
    origin: "*",
    allowedHeaders: "*",
    methods: "*",
  })
);
// instance.use(session({
// 	secret: 'secret',
// 	resave: true,
// 	saveUninitialized: true
// }));

const { Sequelize, DataTypes } = require("sequelize");

const sequelize = new Sequelize("Product", "root", "Nayan@98digisol", {
  host: "localhost",
  dialect: "mysql",
  pool: {
    min: 0,
    max: 5,
    idle: 10000,
  },
  define: {
    timestamps: false,
  },
});

const productModel = require(path.join(__dirname, "./models/productdetails"))(
  sequelize,
  Sequelize.DataTypes
);

const usersModel = require(path.join(__dirname, './models/userdetails'))(sequelize, Sequelize.DataTypes);



instance.get('/', function(request, response) {
	response.sendFile(path.join(__dirname + '/views/log.html'));
});

instance.post('/auth', function(req, resp) {
  let user = req.body;
  sequelize.sync({force:false});
  let usr = usersModel.findOne({where:{user_name: user.user_name}});
  if(usr === null) {
    // alert(`User Name ${user.user_name} not found please register`);
      return resp.status(404).send({message: `User Name ${user.user_name} not found please register`});
  }
  // match the password
  if(usr.pass_word !== user.pass_word){
      return resp.status(401).send({message: `User Name ${user.user_name}Password does not match`});
  }
  return resp.status(200).redirect('/home');
  //.send({message: `User Name ${user.UserName}is Authencated`});

	
});



instance.get("/home", (req, res) => {
  // res.json({ message: "Welcome to Sequelize Crud application." });
  //res.sendFile(__dirname + '/views/log.html');
  //res.sendFile(__dirname + '/views/login.html');
  res.sendFile(__dirname + '/index.html');
});

// define an instance of the DataAccess
let objDal =new dataAccess();

// REST API with callback
// the calback methdo will be passed with request,response object 


instance.get("/api/productDetails/", objDal.getProductdetail);
instance.get("/api/productDetails/:id", objDal.getProductById);
instance.post("/api/productDetails/", objDal.createProduct);
instance.delete('/api/productDetails/:id', objDal.deleteProduct);
instance.put('/api/productDetails/:id', objDal.updateProduct);

instance.listen(9081, () => {
    console.log("REST APIs are on poty 9081");
  });














